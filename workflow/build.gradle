plugins {
    id 'kotlin'
    id 'maven-publish'
    id 'net.corda.plugins.cordapp'
    id 'net.corda.plugins.cordformation'
    id 'net.corda.plugins.quasar-utils'
    id 'org.jetbrains.kotlin.plugin.noarg' version '1.3.61'
    id 'org.jetbrains.kotlin.plugin.jpa' version '1.3.61'
}

noArg {
    annotation("org.example.test.contract.input.state.NoArgConstructor")
    annotation("javax.persistence.Entity")
}

jar.baseName = "test-workflow"

configurations {
    fatJar
    compile.extendsFrom(fatJar)
    cordaDrivers  // drivers required by Corda in Runtime
}

jar {
    def exclusions = {
        'slf4j-api'
    }

    from {
        configurations.fatJar
                .findAll { !exclusions.any { exclusion -> it.name in exclusion } }
                .collect { it.isDirectory() ? it : zipTree(it) }
    }
}

cordapp {
    targetPlatformVersion 10
    minimumPlatformVersion 4
    signing {
        enabled false
    }
    workflow {
        name "Test Flows"
        vendor "example.org"
        licence "Apache License, Version 2.0"
        versionId 1
    }
}

dependencies {
    fatJar "com.jayway.jsonpath:json-path:2.4.0"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.3.61"
    implementation "org.jetbrains.kotlin:kotlin-reflect:1.3.61"
    implementation "org.skyscreamer:jsonassert:1.5.0"

    // Corda dependencies.
    cordaCompile "net.corda:corda-core:$corda_release_version"
    cordaCompile "net.corda:corda-rpc:$corda_release_version"
    cordaCompile "io.netty:netty-all:$netty_version"
    cordaCompile "com.r3.corda.lib.reissuance:reissuance-cordapp-contracts:$reissuance_release_version"
    cordaCompile "com.r3.corda.lib.reissuance:reissuance-cordapp-workflows:$reissuance_release_version"

    cordaRuntime "net.corda:corda:$corda_release_version"
    cordaRuntime "org.apache.logging.log4j:log4j-slf4j-impl:2.11.2"

    // CorDapp dependencies.
    cordapp project(":contract")

    //
    cordaDrivers "org.postgresql:postgresql:42.2.18"
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile) {
    kotlinOptions {
        languageVersion = "1.2"
        apiVersion = "1.2"
        jvmTarget = "1.8"
        javaParameters = true
    }
}

publishing {
    publications {
        maven(MavenPublication) {
            groupId = 'org.example'
            artifactId = 'test-workflow'
            version = project.property('version')
            from components.java
        }
    }
}

// download postgres drivers required for local debug
task copyDrivers(type: Copy) {
    from configurations.cordaDrivers
    into "$buildDir/drivers-down"
}

task deployNodes(type: net.corda.plugins.Cordform, dependsOn: ['jar', 'copyDrivers']) {
    ext.drivers = ["$buildDir/drivers-down/postgresql-42.2.8.jar".toString()]
    nodeDefaults {
        cordapp project(":contract")
    }

    node {
        name "O=Notary,L=London,C=GB"
        notary = [validating: false]
        p2pPort 10000
        rpcSettings {
            address("localhost:10001")
            adminAddress("localhost:10002")
        }
        projectCordapp {
            deploy = false
        }
        cordapps.clear()
    }

    node {
        name "O=supplier,L=London,C=GB"
        p2pPort 10004
        rpcSettings {
            address("localhost:10005")
            adminAddress("localhost:10006")
        }
        rpcUsers = [[user: "user1", "password": "test", "permissions": ["ALL"]]]
        drivers = ext.drivers
        extraConfig = [
                "dataSourceProperties.dataSourceClassName": "org.postgresql.ds.PGSimpleDataSource",
                "dataSourceProperties.dataSource.url"     : "jdbc:postgresql://localhost:5432/supplier?reWriteBatchedInserts=true&assumeMinServerVersion=9.0&ApplicationName=corda",
                "dataSourceProperties.dataSource.user"    : "postgres",
                "dataSourceProperties.dataSource.password": "postgres",
                "dataSourceProperties.maximumPoolSize"    : 20,
                "dataSourceProperties.maxLifetime"        : 90000,
                "jarDirs"                                 : ["../../../../lib"]
        ]
    }

    node {
        name "O=funder,L=London,C=GB"
        p2pPort 10012
        rpcSettings {
            address("localhost:10013")
            adminAddress("localhost:10014")
        }
        rpcUsers = [[user: "user1", "password": "test", "permissions": ["ALL"]]]
        drivers = ext.drivers
        extraConfig = [
                "dataSourceProperties.dataSourceClassName": "org.postgresql.ds.PGSimpleDataSource",
                "dataSourceProperties.dataSource.url"     : "jdbc:postgresql://localhost:5432/funder?reWriteBatchedInserts=true&assumeMinServerVersion=9.0&ApplicationName=corda",
                "dataSourceProperties.dataSource.user"    : "postgres",
                "dataSourceProperties.dataSource.password": "postgres",
                "dataSourceProperties.maximumPoolSize"    : 20,
                "dataSourceProperties.maxLifetime"        : 90000,
                "jarDirs"                                 : ["../../../../lib"]
        ]
    }

    node {
        name "O=buyer,L=London,C=GB"
        p2pPort 10008
        rpcSettings {
            address("localhost:10009")
            adminAddress("localhost:10010")
        }
        rpcUsers = [[user: "user1", "password": "test", "permissions": ["ALL"]]]
        drivers = ext.drivers
        extraConfig = [
                "dataSourceProperties.dataSourceClassName": "org.postgresql.ds.PGSimpleDataSource",
                "dataSourceProperties.dataSource.url"     : "jdbc:postgresql://localhost:5432/buyer?reWriteBatchedInserts=true&assumeMinServerVersion=9.0&ApplicationName=corda",
                "dataSourceProperties.dataSource.user"    : "postgres",
                "dataSourceProperties.dataSource.password": "postgres",
                "dataSourceProperties.maximumPoolSize"    : 20,
                "dataSourceProperties.maxLifetime"        : 90000,
                "jarDirs"                                 : ["../../../../lib"]
        ]
    }
}