buildscript {
    repositories {
        mavenLocal()
        maven {
            credentials {
                username = System.getenv("ARTIFACTORY_USR")
                password = System.getenv("ARTIFACTORY_PSW")
            }
            def uri = uri(System.getenv("ARTIFACTORY_URL") + "/")
            url uri.resolve("gradle-dev")
        }
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:1.3.61"
        classpath "net.corda.plugins:cordapp:5.0.13"
        classpath "net.corda.plugins:cordformation:5.0.13"
        classpath "net.corda.plugins:quasar-utils:5.0.13"
        classpath "org.jfrog.buildinfo:build-info-extractor-gradle:4.21.0"
    }
    ext {
        corda_release_version = "4.8"
        netty_version = '4.1.49.Final'
        corda_common_lib_version = '2.1.0'
        reissuance_release_version = '1.0-GA'
    }
}

plugins {
    id 'pl.allegro.tech.build.axion-release' version "1.10.2"
}

allprojects {
    apply plugin: 'maven-publish'
    apply plugin: 'com.jfrog.artifactory'

    project.version = System.getenv("TAG") ?: "local"

    repositories {
        mavenLocal()
        maven {
            credentials {
                username = System.getenv("ARTIFACTORY_USR")
                password = System.getenv("ARTIFACTORY_PSW")
            }
            def uri = uri(System.getenv("ARTIFACTORY_URL") + "/")
            url uri.resolve("gradle-dev")
        }
        maven { url 'https://software.r3.com/artifactory/corda-lib' }
    }

    configurations {
        compile {
            exclude group: 'commons-logging', module: 'commons-logging'
            exclude group: 'io.netty', module: 'netty-common'
            exclude group: 'io.netty', module: 'netty-buffer'
            exclude group: 'io.netty', module: 'netty-handler'
            exclude group: 'io.netty', module: 'netty-codec'
            exclude group: 'io.netty', module: 'netty-codec-http'
            exclude group: 'io.netty', module: 'netty-resolver'
            exclude group: 'io.netty', module: 'netty-transport'
            exclude group: 'io.netty', module: 'netty-transport-native-epoll'
            exclude group: 'io.netty', module: 'netty-transport-native-kqueue'
        }

        test {
            exclude group: 'io.netty', module: 'netty-common'
            exclude group: 'io.netty', module: 'netty-buffer'
            exclude group: 'io.netty', module: 'netty-handler'
            exclude group: 'io.netty', module: 'netty-codec'
            exclude group: 'io.netty', module: 'netty-codec-http'
            exclude group: 'io.netty', module: 'netty-resolver'
            exclude group: 'io.netty', module: 'netty-transport'
            exclude group: 'io.netty', module: 'netty-transport-native-epoll'
            exclude group: 'io.netty', module: 'netty-transport-native-kqueue'
        }
    }

    tasks.withType(JavaCompile) {
        options.compilerArgs << "-parameters"
    }
}

artifactoryPublish.skip = true

artifactory {
    contextUrl = System.getenv("ARTIFACTORY_URL")
    publish {
        repository {
            repoKey = "gradle-dev-local"
            username = System.getenv("ARTIFACTORY_USR")
            password = System.getenv("ARTIFACTORY_PSW")
            maven = true
        }
        defaults {
            publications('maven')
            publishArtifacts = true
            publishPom = true
        }
    }
    resolve {
        repository {
            repoKey = 'gradle-dev'
            username = System.getenv("ARTIFACTORY_USR")
            password = System.getenv("ARTIFACTORY_PSW")
            maven = true
        }
    }
}